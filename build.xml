<?xml version="1.0" encoding="UTF-8"?>
<project name="laravel-nomadic" default="build" basedir=".">
    <target name="build" depends="prepare,phpcs,phpunit,assert"/>
    <property name="reports.dir" value="${project.basedir}/reports" override="true" />

    <!-- Prepare the build by cleaning up the artifacts. -->
    <target name="prepare" description="Cleanup build artifacts">
        <delete dir="${reports.dir}"/>
        <mkdir dir="${reports.dir}"/>
    </target>

    <!-- Detect coding standard violations and print to screen if error occurs. -->
    <target name="phpcs" description="Detect coding standard violations">
        <phpcodesniffer standard="${project.basedir}/vendor/chadicus/coding-standard/Chadicus" haltonerror="true" file="src">
            <formatter type="checkstyle" outfile="${reports.dir}/phpcs.log"/>
            <formatter type="full" usefile="false"/>
        </phpcodesniffer>
    </target>

    <!-- Run phpunit with code coverage and generate reports -->
    <target name="phpunit" description="Run phpunit tests">
        <exec command="${project.basedir}/vendor/bin/phpunit -c ${project.basedir}/phpunit.xml >> ${reports.dir}/phpunit.log"
           returnProperty="phpunitreturn" />
        <if>
            <not>
                <equals arg1="${phpunitreturn}" arg2="0"/>
            </not>
            <then>
                <exec command="sed -e '/Generating code coverage report in Clover XML format/,$d' ${reports.dir}/phpunit.log" outputProperty="failedtests"/>
                <fail msg="${failedtests}"/>
            </then>
        </if>
    </target>

    <!-- Make sure tests didnt fail and code coverage standards are met -->
    <target name="assert" description="Assert project standards met.">
        <!-- Verify 100% Code Coverage -->
        <xmlproperty file="${reports.dir}/coverage.xml" collapseAttributes="true"/>
        <php expression="floor(${coverage.project.metrics.coveredelements}/${coverage.project.metrics.elements})" returnProperty="belowCoverage" />
        <if>
            <equals arg1="${belowCoverage}" arg2="0"/>
            <then>
                <php expression="round(${coverage.project.metrics.coveredelements}/${coverage.project.metrics.elements}*100, 2)" returnProperty="codecoverage"/>
                <warn>Code Coverage: ${codecoverage} %</warn>
                <fail msg="!${line.separator}${line.separator}Code Coverage needs to be increased 100% still:  file://${reports.dir}/index.html" />
            </then>
        </if>
    </target>
</project>
